{"version":3,"sources":["component/NameList.js","component/IterationSample.js","App.js","reportWebVitals.js","index.js"],"names":["NameList","printTime","useState","id","setId","time","setTime","flow","setFlow","times","setTimes","flowSec","setFlowSec","callback","delay","savedCallback","useRef","useEffect","current","tick","setInterval","clearInterval","useInterval","now","Date","totalTime","start","end","remain","s","Math","floor","m","String","timeList","map","t","className","onClick","e","stopPropagation","target","parentElement","querySelector","classList","remove","disabled","add","style","color","textAlign","fontSize","fontWeight","IterationSample","names","setNames","inputText","setInputText","h","getHours","getMinutes","getSeconds","nameList","name","onDoubleClick","onRemove","text","onSubmit","preventDefault","concat","filter","closest","lastChild","toggle","type","value","onChange","onKeyPress","key","App","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.18cd8505.chunk.js","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\r\n\r\nconst NameList = ({ printTime }) => {\r\n  const [id, setId] = useState(0);\r\n  const [time, setTime] = useState({});\r\n  const [flow, setFlow] = useState(false);\r\n  const [times, setTimes] = useState([]);\r\n  const [flowSec, setFlowSec] = useState(\"00:00\");\r\n\r\n  const start = (e) => {\r\n    const start = new Date();\r\n    setTime({ id: id, start: start });\r\n\r\n    e.stopPropagation();\r\n    setFlow(true);\r\n    e.target.parentElement.querySelector(\".timer\").classList.remove(\"hidden\");\r\n  };\r\n\r\n  const stop = (e) => {\r\n    const end = new Date();\r\n    setTime({ ...time, end: end });\r\n    setFlow(false);\r\n    setId(id + 1);\r\n    e.stopPropagation();\r\n    e.target.parentElement.querySelector(\".timer\").classList.add(\"hidden\");\r\n  };\r\n\r\n  useInterval(\r\n    () => {\r\n      const now = new Date();\r\n      setFlowSec(totalTime(time.start, now));\r\n    },\r\n    flow ? 1000 : null\r\n  );\r\n\r\n  const totalTime = (start, end) => {\r\n    const remain = (end - start) / 1000;\r\n    const s = Math.floor(remain % 60);\r\n    const m = Math.floor(remain / 60);\r\n    return String(`${m < 10 ? \"0\" + m : m}:${s < 10 ? \"0\" + s : s}`);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (time.end && flow === false) {\r\n      setTimes((times) => [...times, time]);\r\n    }\r\n  }, [time, flow]);\r\n\r\n  // https://www.suzie.world/blog/making-setinterval-declarative-with-react-hooks\r\n  // useEffect(() => {\r\n  //   timerId.current = setInterval(() => {\r\n  //     setMin(parseInt(time.current / 60));\r\n  //     setSec(time.current % 60);\r\n  //     time.current -= 1;\r\n  //   }, 1000);\r\n\r\n  //   return () => clearInterval(timerId.current);\r\n  // }, []);\r\n  // https://handhand.tistory.com/32\r\n\r\n  const timeList = times.map((t) => (\r\n    <li id={t.id} key={t.id}>\r\n      start: {printTime(t.start)}, end: {printTime(t.end)}, during:{\" \"}\r\n      {totalTime(t.start, t.end)}{\" \"}\r\n    </li>\r\n  ));\r\n\r\n  return (\r\n    <div className=\"hidden\">\r\n      <button onClick={start} disabled={flow ? true : false}>\r\n        Start\r\n      </button>\r\n      <button onClick={stop} disabled={flow ? false : true}>\r\n        Stop\r\n      </button>\r\n      <div\r\n        className=\"hidden timer\"\r\n        style={{\r\n          color: \"red\",\r\n          textAlign: \"center\",\r\n          fontSize: \"20pt\",\r\n          fontWeight: \"900\",\r\n        }}\r\n      >\r\n        {flow ? flowSec : null}\r\n      </div>\r\n      <ol>{timeList}</ol>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NameList;\r\n\r\nfunction useInterval(callback, delay) {\r\n  const savedCallback = useRef();\r\n\r\n  // Remember the latest function.\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    function tick() {\r\n      savedCallback.current();\r\n    }\r\n    if (delay !== null) {\r\n      let id = setInterval(tick, delay);\r\n      return () => clearInterval(id);\r\n    }\r\n  }, [delay]);\r\n}\r\n","import { useState } from \"react\";\r\nimport \"./iterationSample.css\";\r\nimport NameList from \"./NameList\";\r\n\r\nconst IterationSample = () => {\r\n  const [names, setNames] = useState([]);\r\n  const [id, setId] = useState(1);\r\n  const [inputText, setInputText] = useState(\"\");\r\n\r\n  const printTime = (time) => {\r\n    const h = time.getHours();\r\n    const m = time.getMinutes();\r\n    const s = time.getSeconds();\r\n    return String(\r\n      `${h < 10 ? \"0\" + h : h}:${m < 10 ? \"0\" + m : m}:${s < 10 ? \"0\" + s : s}`\r\n    );\r\n  };\r\n\r\n  const nameList = names.map((name) => (\r\n    <li\r\n      key={name.id}\r\n      onDoubleClick={() => onRemove(name.id)}\r\n      onClick={(e) => onClick(e)}\r\n    >\r\n      <strong>{name.text}</strong> <span>{`${printTime(name.time)}`}</span>\r\n      <NameList printTime={printTime} />\r\n    </li>\r\n  ));\r\n\r\n  const onChange = (e) => {\r\n    setInputText(e.target.value);\r\n  };\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (inputText !== \"\") {\r\n      const time = new Date();\r\n      setNames(names.concat({ id: id, text: inputText, time: time }));\r\n      setId(id + 1);\r\n      setInputText(\"\");\r\n    }\r\n  };\r\n  const onKeyPress = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      onSubmit(e);\r\n    }\r\n  };\r\n  const onRemove = (id) => {\r\n    setNames(names.filter((name) => name.id !== id));\r\n  };\r\n\r\n  const onClick = (e) => {\r\n    e.target.closest(\"li\").lastChild.classList.toggle(\"hidden\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Time Logger</h1>\r\n      <form onSubmit={onSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          value={inputText}\r\n          onChange={onChange}\r\n          onKeyPress={onKeyPress}\r\n        />\r\n        <button>Add</button>\r\n      </form>\r\n      <ul>{nameList}</ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IterationSample;\r\n","import \"./App.css\";\n// import Counter from \"./component/Counter\";\n// import EventPractice from \"./component/EventPractice\";\n// import EventPracticeF from \"./component/EventPracticeF\";\n// import MyComponent from \"./component/MyComponent\";\n// import Say from \"./component/Say\";\n// import ScrollBox from \"./component/ScrollBox\";\n// import ValidatiionSample from \"./component/ValidationSample\";\nimport IterationSample from \"./component/IterationSample\";\nimport { Component } from \"react\";\n\n// function App() {\n//   const name = \"Mic\";\n//   return (\n//     <div className=\"App\">\n//       {name === \"React\" ? (\n//         <>\n//           <h1>Hello, {name}!</h1>\n//           <h2>Is it works?</h2>\n//         </>\n//       ) : (\n//         <MyComponent name=\"팅커미\" favoriteNumber={2}>\n//           무밍\n//         </MyComponent>\n//       )}\n//       <Counter />\n//       <Say />\n//       <Say />\n//       <EventPractice />\n//       <EventPracticeF />\n//       <ValidatiionSample />\n\n//     </div>\n//   );\n// }\n\n// class App extends Component {\n//   render() {\n//     return (\n//       <div>\n//         <ScrollBox ref={(ref) => (this.scrollBox = ref)} />\n//         <button onClick={() => this.scrollBox.scrollToBottom()}>\n//           맨 밑으로\n//         </button>\n//         <button onClick={() => this.scrollBox.scrollToTop()}>맨 위로</button>\n//       </div>\n//     );\n//   }\n// }\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <IterationSample />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}